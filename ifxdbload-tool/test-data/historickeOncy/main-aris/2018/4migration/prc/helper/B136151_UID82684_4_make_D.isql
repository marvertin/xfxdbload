CREATE PROCEDURE B136151_UID82684_4_make_D (-- vstupni parametry
  ADebugFile  CHAR(30) DEFAULT NULL -- priznak zda vytvaret debug file, pokud je vyplneny
)


DEFINE _ser         INT;
DEFINE _serDM       INT;
DEFINE _serobjekt   INT;

DEFINE _refser    BIGINT;
DEFINE  _refkart  CHAR(1);
DEFINE _refhead    BIGINT;

DEFINE _refotazka INT;
DEFINE _refodpoved INT;
DEFINE _poradi INT;
DEFINE _platnost INT;
DEFINE _poruser CHAR(20);
DEFINE _refuser CHAR(20);
DEFINE _portime DATETIME  YEAR to SECOND ;
DEFINE _reftime DATETIME    YEAR to SECOND ;


--povinne globalni promenne
DEFINE GLOBAL TW_ErrSql   INT          DEFAULT NULL;
DEFINE GLOBAL TW_ErrIsam  INT          DEFAULT NULL;
DEFINE GLOBAL TW_ErrText  VARCHAR(255) DEFAULT NULL;


--osetreni chyby pri konstrukci kursoru
ON EXCEPTION SET TW_ErrSql, TW_ErrIsam, TW_ErrText
   CALL TW_ErrorTran();
END EXCEPTION;

--izolacni uroven bude commited read
SET ISOLATION TO COMMITTED READ;

IF(PD_TraceRequestedBegin(ADebugFile) = 1) THEN
  trace ON;
END IF;

--ZACATEK vlastni migrace
BEGIN WORK;

--záznam o spuštení migrace
let _serDM = TW_DM_Start('RSTS_27075', 'UID82684', 'Migrace příjmů a úvěrových smluv');

COMMIT WORK;

BEGIN WORK;

SET TRIGGERS FOR eu_dotaznikbody_mat DISABLED;

FOREACH c1 WITH hold FOR
  SELECT ser,  refser,  refkart
  INTO  _ser, _refser, _refkart
  FROM B136151_UID82684
  WHERE zprac < 0
  ORDER BY ser
  
  BEGIN
    --osetreni chyby - pokracovat se bude na dalsim radku ridici tabulky
    ON EXCEPTION SET TW_ErrSql, TW_ErrIsam, TW_ErrText
      --rollback transakce
      ROLLBACK WORK;
      --ulozime chybu do ridici tabulky
      UPDATE B136151_UID82684
      SET(NumErr,ISAMErr,TextErr, zprac) = (TW_ErrSql, TW_ErrIsam, TW_ErrText, -2)
      WHERE ser=_ser;
      --zahajeni transakce migrace
      BEGIN WORK;
    END EXCEPTION;

    -- Vlastní nastavení
    
    INSERT INTO eu_dotaznikhead_mat(urceni) VALUES('VARIANTAPU');
    
    -- změna z TW_LastSer na SELECT MAX(serno), protože serno je jednak BIGINT a funkce TW_LastBigSer() nefunguje!!
    let _refhead  = (SELECT MAX(serno) FROM eu_dotaznikhead_mat);
    
    IF _refkart = 'Z' THEN
      foreach 
        select  refotazka, refodpoved,poradi, platnost, poruser ,portime, refuser, reftime
        into _refotazka, _refodpoved, _poradi, _platnost, _poruser , _portime, _refuser, _reftime
        from old_seu_dotaznikvarpu_mat where refseuuz = _refser and refodpoved is not null
        
        INSERT INTO eu_dotaznikbody_mat(refhead, refotazka, refodpoved,poradi, platnost, poruser ,portime, refuser, reftime) 
                 VALUES(_refhead,_refotazka, _refodpoved, _poradi, _platnost, _poruser , _portime, _refuser, _reftime);
      end foreach;
      
      UPDATE seu_uz_mat SET refdotaznik = _refhead WHERE serno = _refser;
    ELSE
       foreach
        select  refotazka, refodpoved,poradi, platnost, refuser, reftime
        into _refotazka, _refodpoved, _poradi, _platnost, _refuser, _reftime
        from old_PRO_DotaznikVarPU  where bssimulationcase_id = _refser and refodpoved is not null
       
        INSERT INTO eu_dotaznikbody_mat(refhead, refotazka, refodpoved,poradi, platnost, poruser ,portime, refuser, reftime) 
                 VALUES(_refhead,_refotazka, _refodpoved, _poradi, _platnost, _refuser , _reftime, _refuser, _reftime);
      end foreach; 
      
      UPDATE PRO_bssimulationcase SET refdotaznik = _refhead WHERE id = _refser;
    END IF; 
    
    --nastaví příznak zpracováno na 1
    UPDATE B136151_UID82684 SET zprac = 1, NumErr = NULL, ISAMErr = NULL, TextErr = NULL WHERE ser = _ser;
  END;
  
  --nova transakce
  COMMIT WORK;
  BEGIN WORK;
END FOREACH;

SET TRIGGERS FOR eu_dotaznikbody_mat ENABLED;

COMMIT WORK;
--KONEC vlastni migrace

--ZACATEK dokonceni migrace (pokud dokonceni existuje)
BEGIN WORK;

--zápis o ukončení migrace do provozního deníku a protokolu migraci
CALL TW_DM_End(_serDM);

IF(PD_TraceRequestedEnd(ADebugFile) = 1) THEN
   trace OFF;
END IF;

COMMIT WORK;
--KONEC dokonceni migrace

END PROCEDURE;
