create PROCEDURE RSTS_5206_promlcpohl_make_D (-- vstupni paramtery
                                              ADebugFile    Char(30) default null -- priznak zda vytvaret debug file, pokud je vyplneny
)

define _ser       Int;
define _serDM     Int;
define _serobjekt Int;

define _realn     Int;

--povinne globalni promenne
define global TW_ErrSql   Int          default null;
define global TW_ErrIsam  Int          default null;
define global TW_ErrText  VarChar(255) default null;

--osetreni chyby pri konstrukci kursoru
on exception set TW_ErrSql, TW_ErrIsam, TW_ErrText
   call TW_ErrorTran();
end exception;

--izolacni uroven bude commited read
SET ISOLATION TO COMMITTED READ;

if(PD_TraceRequestedBegin(ADebugFile) = 1) then
  trace on;
end if;

--ZACATEK vlastni migrace
BEGIN WORK;

--záznam o spuštení migrace
let _serDM = TW_DM_Start('RSTS-5206', 'RSTS_5206_promlcpohl', 'Nastavení příznaku promlčená pohledávka');

COMMIT WORK;


BEGIN WORK;

--pres ridici tabulku
foreach cc2 with hold for
   SELECT ser,  realn
   INTO  _ser, _realn
   FROM RSTS_5206_promlcpohl
   WHERE zprac < 0
   ORDER BY ser

  begin
    --osetreni chyby - pokracovat se bude na dalsim radku ridici tabulkz
    on exception set TW_ErrSql, TW_ErrIsam, TW_ErrText
      --rollback transakce
      ROLLBACK WORK;
      --ulozime chybu do ridici tabulky
      UPDATE RSTS_5206_promlcpohl
        SET(NumErr,ISAMErr,TextErr, zprac) = (TW_ErrSql, TW_ErrIsam, TW_ErrText, -2)
        WHERE ser=_ser;
      --zahajeni transakce migrace
      BEGIN WORK;
    end exception;
    
   --vlastni algoritmus migrace
   if exists (select 1 from RU_OdpPohl_Kart where realn = _realn and stav not in ('S', 'Z')) then
    update ru_real_mat 
    set promlcpohl = 1 
    where realn = _realn;
   end if;
    
   let _serObjekt = TW_DM_VlozObjekt(_serDM, 'T', 'ru_real_mat', 'U', _realn);
   
   
   UPDATE RSTS_5206_promlcpohl SET zprac = 1, NumErr = null, ISAMErr = null, TextErr = null  WHERE ser=_ser;
  end;

  --nova transakce
  COMMIT WORK;
  BEGIN WORK;
end foreach;

COMMIT WORK;
--KONEC vlastni migrace

--ZACATEK dokonceni migrace (pokud dokonceni existuje)
BEGIN WORK;

--zápis o ukončení migrace do provozního deníku a protokolu migraci
call TW_DM_End(_serDM);

if(PD_TraceRequestedEnd(ADebugFile) = 1) then
   trace off;
end if;

COMMIT WORK;
--KONEC dokonceni migrace

end procedure;
