create procedure A42425_RN00265061_make_D(-- vstupni paramtery
                                    ADebugFile    Char(30) default null, -- priznak zda vytvaret debug file, pokud je vyplneny
                                    ABezTransakci int default 0
)

define _davka        Int;
define _akce         Int;

define _ser          Int;
define _smlouva       Dec(16,0);
define _tsml          char(4);
define _smlstav     char(1);
define _poradi       int;

--povinne globalni promenne
define global TW_ErrSql   Int          default null;
define global TW_ErrIsam  Int          default null;
define global TW_ErrText  VarChar(255) default null;

--osetreni chyby pri konstrukci kursoru
on exception set TW_ErrSql, TW_ErrIsam, TW_ErrText
   call TW_ErrorTran();
end exception;

--izolacni uroven bude commited read
SET ISOLATION TO COMMITTED READ;

if(PD_TraceRequestedBegin(ADebugFile) = 1) then
  trace on;
end if;

--ZACATEK vlastni migrace
if(ABezTransakci = 0) then
  BEGIN WORK;
end if;

--set triggers eu_contractchecking_kart_u disabled;

--záznam o spuštení migrace/datové manipulace do provozního deníku (typ zápisu OB / 1).
let _Davka = AP_NovaDavka ('OB');
let _Akce = TW_Provden('OB',1,_Davka,'Zahájení migrace/datové manipulace RN00265061');

--pres ridici tabulku
foreach cc2 with hold for
   SELECT  ser, smlouva, tsml, smlstav
     INTO _ser,_smlouva, _tsml, _smlstav
     FROM RN00265061_1
    WHERE zprac < 0
 ORDER BY ser

  begin
    --osetreni chyby - pokracovat se bude na dalsim radku ridici tabulkz
    on exception set TW_ErrSql, TW_ErrIsam, TW_ErrText
      --rollback transakce
      if(ABezTransakci = 0) then
         ROLLBACK WORK;
      end if;
      --ulozime chybu do ridici tabulky
      UPDATE RN00265061_1
        SET(NumErr,ISAMErr,TextErr, zprac)= (TW_ErrSql, TW_ErrIsam, TW_ErrText, -2)
        WHERE ser=_ser;
      --zahajeni transakce migrace
      if(ABezTransakci = 0) then
         BEGIN WORK;
      end if;
    end exception;

    --vlastni algoritmus migrace
   SELECT max(poradi)  INTO _poradi FROM eu_contractchecking_kart WHERE smlouva = _smlouva and tsml = _tsml;
   IF _poradi IS NOT NULL THEN
      IF _smlstav in ('D', 'L') OR _tsml in ('PPSU', 'SUPO', 'PUPO', 'KOME') THEN
        UPDATE eu_contractchecking_kart SET bonita2status = 'S' WHERE smlouva = _smlouva and tsml = _tsml and poradi = _poradi;
      elIF _smlstav in ('A', 'B', 'C' ) OR _tsml in ('PFSU', 'SUFO', 'PUSU') THEN
        UPDATE eu_contractchecking_kart SET bonita2status = 'N' WHERE smlouva = _smlouva and tsml = _tsml and poradi = _poradi;
      END IF;
   END IF;   
   --konec algoritmu migrace

    --nastaví pøíznak na zpracováno +1
    UPDATE RN00265061_1 SET zprac = 1, NumErr = null, ISAMErr = null, TextErr = null WHERE ser = _ser;
  end;

  --nova transakce
  if(ABezTransakci = 0) then
    COMMIT WORK;
    BEGIN WORK;
  end if;
end foreach;

if(ABezTransakci = 0) then
   COMMIT WORK;
--KONEC vlastni migrace

--ZACATEK dokonceni migrace (pokud dokonceni existuje)
   BEGIN WORK;
end if;

--algoritmus dokonceni migrace
--set triggers eu_contractchecking_kart_u enabled;

--zápis o ukonèení migrace do provozního deníku
let _Akce = TW_Provden('OB',2,_Davka,'Ukonèení migrace/datové manipulace RN00265061');

if(PD_TraceRequestedEnd(ADebugFile) = 1) then
   trace off;
end if;

if(ABezTransakci = 0) then
   COMMIT WORK;
end if;
--KONEC dokonceni migrace

end procedure;
